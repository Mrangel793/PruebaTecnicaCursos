@page "/login"
@using System.ComponentModel.DataAnnotations
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-lg border-0 rounded-4 mt-5">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h3 class="mb-0">
                        <i class="bi bi-lock-fill me-2"></i>Iniciar Sesión
                    </h3>
                </div>
                <div class="card-body p-4">
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            @ErrorMessage
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm" class="needs-validation" novalidate>
                        <DataAnnotationsValidator />
                        <ValidationSummary class="alert alert-warning" />

                        <div class="mb-3">
                            <label for="email" class="form-label">
                                <i class="bi bi-envelope-fill me-2"></i>Email
                            </label>
                            <div class="input-group has-validation">
                                <span class="input-group-text"><i class="bi bi-at"></i></span>
                                <InputText @bind-Value="loginModel.Email"
                                           type="email"
                                           class="form-control"
                                           id="email"
                                           placeholder="nombre@ejemplo.com"
                                           required />
                                <ValidationMessage For="@(() => loginModel.Email)" class="invalid-feedback" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">
                                <i class="bi bi-key-fill me-2"></i>Contraseña
                            </label>
                            <div class="input-group has-validation">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <InputText @bind-Value="loginModel.Password"
                                           type="password"
                                           class="form-control"
                                           id="password"
                                           placeholder="Contraseña"
                                           required />
                                <ValidationMessage For="@(() => loginModel.Password)" class="invalid-feedback" />
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Iniciar Sesión
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <a href="/recuperar-contrasena" class="text-muted small">
                            <i class="bi bi-question-circle me-1"></i>¿Olvidaste tu contraseña?
                        </a>
                    </div>
                </div>
                <div class="card-footer text-center py-3 bg-light">
                    <p class="mb-0 small text-muted">
                        ¿No tienes una cuenta?
                        <a href="/registro" class="text-primary fw-bold">Regístrate</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #f4f6f9;
    }
</style>

@code {
    private LoginModel loginModel = new LoginModel();
    private string ErrorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            System.Diagnostics.Debug.Print($"Intentando login con Email: {loginModel.Email}");

            var success = await AuthService.Login(loginModel.Email, loginModel.Password);

            Console.WriteLine($"Resultado del login: {success}");

            if (success)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Credenciales inválidas.";
                Console.WriteLine("Login fallido: Credenciales inválidas");
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error al autenticar: {ex.Message}";
            Console.WriteLine($"Excepción en login: {ex}");
        }
    }

    public class LoginModel
    {
        // [Required(ErrorMessage = "El email es obligatorio")]
        // [EmailAddress(ErrorMessage = "El formato del email no es válido")]
        public string Email { get; set; } = string.Empty;

        // [Required(ErrorMessage = "La contraseña es obligatoria")]
        public string Password { get; set; } = string.Empty;
    }
}
