@page "/login"
@using System.ComponentModel.DataAnnotations
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Iniciar Sesión</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email</label>
        <InputText @bind-Value="loginModel.Email" type="email" class="form-control" />
    </div>

    <div>
        <label>Contraseña</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <div>
        <button class="btn btn-primary" type="submit">Iniciar Sesión</button>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string ErrorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            System.Diagnostics.Debug.Print($"Intentando login con Email: {loginModel.Email}");

            var success = await AuthService.Login(loginModel.Email, loginModel.Password);

            Console.WriteLine($"Resultado del login: {success}");

            if (success)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Credenciales inválidas.";
                Console.WriteLine("Login fallido: Credenciales inválidas");
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error al autenticar: {ex.Message}";
            Console.WriteLine($"Excepción en login: {ex}");
        }
    }

    public class LoginModel
    {
        // [Required(ErrorMessage = "El email es obligatorio")]
        // [EmailAddress(ErrorMessage = "El formato del email no es válido")]
        public string Email { get; set; } = string.Empty;

        // [Required(ErrorMessage = "La contraseña es obligatoria")]
        public string Password { get; set; } = string.Empty;
    }
}
